{"version":3,"sources":["utils/checkInfixed.js","utils/shuntingYard.js","utils/evaluatePostix.js","components/App.js","utils/parseArray.js","index.js"],"names":["isOperator","char","operatorPrecedence","operator","isOperatorStackEmpty","operatorStack","length","evaluate","operandA","operandB","App","useState","infixNotation","setInfixNotation","initialLoad","setInitialLoad","result","setResult","clearNotation","setClearNotation","isValidKey","key","charCodeAt","toLowerCase","handleKeys","value","slice","removeEmptyStrings","split","filter","item","str","operandStack","minusCounter","iteration","numberOfPoints","push","pop","isInfixed","expressionArr","values","token","evaluatePostfix","outputQueue","shuntingYard","arr","parsedExpression","operand","i","parseFloat","parseArr","document","body","classList","add","className","onClick","event","target","localName","textContent","onKeyDown","preventDefault","autoFocus","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b8a5d481.chunk.js","sourcesContent":["function isOperator(char) {\n  return (\n    char === \"+\" || char === \"-\" || char === \"*\" || char === \"/\" || char === \"=\"\n  );\n}\n\nfunction isInfixed(str) {\n  let operatorStack = [];\n  const operandStack = [];\n  let minusCounter = 0;\n  let iteration = 0;\n  let numberOfPoints = 0;\n  for (const char of str) {\n    if (isOperator(char)) {\n      numberOfPoints = 0;\n      if (char === \"-\") {\n        minusCounter++;\n      }\n\n      if (!operandStack.length) {\n        if ((char !== \"-\") || (minusCounter > 1 && iteration === 1)) {\n          return false;\n        } \n\n        if ((char !== \"-\") || (minusCounter > 2 && iteration > 1)) {\n          return false;\n        } \n      }\n\n      if (operatorStack.length) {\n        if (char !== \"-\" || minusCounter > 2) {\n          return false;\n        } \n      }\n      operatorStack.push(char);\n      operandStack.pop();\n    } else {\n      minusCounter = 0;\n      operandStack.push(char);\n      operatorStack = [];\n      for (const item of char) {\n        if (item === \".\") {\n          numberOfPoints++;\n          if (numberOfPoints > 1) {\n            return false;\n          }\n        }\n      }\n    }\n    iteration++;\n  }\n  // Check whether the last character is an operator (- + / *)\n  if (isOperator(str[str.length - 1])) {\n    return false;\n  }\n  return true;\n}\n\nexport { isOperator, isInfixed };\n","// Helper functions\nfunction operatorPrecedence(operator) {\n  return (operator === \"+\" || operator === \"-\") ? 1 : 2; \n}\n\nfunction isOperatorStackEmpty(operatorStack) {\n  return operatorStack.length === 0;\n}\n\nexport default function shuntingYard(expressionArr) {\n  const outputQueue = [];\n  const operatorStack = [];\n  for (const token of expressionArr) {\n    if (typeof token === \"number\") {\n      outputQueue.push(token);\n    } else {\n      while (!isOperatorStackEmpty(operatorStack) && operatorPrecedence(operatorStack[operatorStack.length - 1]) >= operatorPrecedence(token)) {\n        outputQueue.push(operatorStack.pop());\n      }\n      operatorStack.push(token);\n    }\n  }\n  while (!isOperatorStackEmpty(operatorStack)) {\n    outputQueue.push(operatorStack.pop());\n  }\n  return outputQueue;\n}","import { isOperator } from \"./checkInfixed\";\n\nfunction evaluate(operandA, operator, operandB) {\n  switch (operator) {\n    case \"+\":\n      return operandA + operandB;\n    case \"-\":\n      return operandA - operandB;\n    case \"*\":\n      return operandA * operandB;\n    case \"/\":\n      return operandA / operandB;\n    default:\n      return null;\n  }\n}\n\nexport default function evaluatePostfix(expressionArr) {\n  const values = [];\n  let operandA = null;\n  let operandB = null;\n  for (const token of expressionArr) {\n    if (isOperator(token)) {\n      operandB = values.pop();\n      operandA = values.pop();\n      values.push(evaluate(operandA, token, operandB));\n    } else {\n      values.push(token);\n    }\n  }\n  return values.pop();\n}","import { useState } from \"react\";\nimport { isInfixed } from \"../utils/checkInfixed\";\nimport parseArr  from \"../utils/parseArray\"\nimport shuntingYard from \"../utils/shuntingYard\";\nimport evaluatePostfix from \"../utils/evaluatePostix\";\n\nfunction App() {\n  const [infixNotation, setInfixNotation] = useState(\"0\");\n  const [initialLoad, setInitialLoad] = useState(true);\n  const [result, setResult] = useState(\"0\");\n  const [clearNotation, setClearNotation] = useState(false);\n\n  function isValidKey(key) {\n    if ((key.charCodeAt() > 47 && key.charCodeAt() < 58) || key === \".\" || key === \"a\" || key === \"/\" || key === \"Backspace\" || key.toLowerCase() === \"x\" || key === \"*\" || key === \"+\" || key === \"-\" || key === \"/\" || key === \"=\" || key === \"Enter\") {\n      return true;\n    }\n    return false;\n  }\n\n  function handleKeys(key) {\n    if ((initialLoad && isValidKey(key)) || (clearNotation && isValidKey(key))) {\n      setInfixNotation(\"\");\n      setInitialLoad(false);\n    }\n\n    if (isValidKey(key) && (key !== \"Enter\" || key !== \"=\")) {\n      setClearNotation(false);\n    }\n\n    if ((key.charCodeAt() > 47 && key.charCodeAt() < 58) || key === \".\") {\n      setInfixNotation((value) => value + key);\n    } else if (key.toLowerCase() === \"a\") {\n      setInfixNotation(\"0\");\n      setInitialLoad(true);\n      setResult(\"0\");\n    } else if (key === \"Backspace\") {\n      if (infixNotation.length === 1) {\n        setInfixNotation(\"0\");\n        setInitialLoad(true);\n      } else {\n        setInfixNotation((value) => value.slice(0, value.length - 1));\n      }\n    } else if (key === \"+\" || key === \"-\" || key === \"/\") {\n      setInfixNotation((value) => `${value} ${key} `);\n    } else if (key.toLowerCase() === \"x\" || key === \"*\") {\n      setInfixNotation((value) => `${value} * `);\n    } else if (key === \"=\" || key === \"Enter\") {\n      setInfixNotation((value) => `${value} =`);\n      setClearNotation(true);\n      const removeEmptyStrings = infixNotation\n        .split(\" \")\n        .filter((item) => item !== \"\" && item !== \" \");\n      if (isInfixed(removeEmptyStrings)) {\n        const parsedArr = parseArr(removeEmptyStrings);\n        const postFixExpression = shuntingYard(parsedArr);\n        const result = evaluatePostfix(postFixExpression);\n        setResult(result);\n      } else {\n        setResult(\"Syntax Error!\");\n      }\n    }\n  }\n\n  function handleButtonClick(event) {\n    const target = event.target;\n    if (target.localName === \"button\") {\n      let textContent = target.textContent;\n      if (textContent === \"AC\") {\n        textContent = \"a\";\n      }\n      handleKeys(textContent);\n    }\n  }\n\n  function handleKeydown(event) {\n    const key = event.key;\n    if (key === \"Enter\") {\n      event.preventDefault();\n    }\n    handleKeys(key);\n  }\n\n  document.body.classList.add(\"bg-gray-600\");\n\n  return (\n    <div\n      className=\"flex items-center h-92vh sm:h-screen\"\n      onClick={handleButtonClick}\n      onKeyDown={handleKeydown}\n    >\n      <div className=\"grid grid-cols-4 gap-px h-5/6 p-px text-xl text-gray-50 max-w-sm m max-h-600px mx-auto flex-1\">\n        <div className=\"col-span-full text-right bg-black rounded-t\">\n          <div className=\"h-1/2 px-3 flex flex-col justify-center\">\n            {infixNotation}\n          </div>\n          <div className=\"h-1/2 px-3 flex flex-col justify-center\">\n            {result}\n          </div>\n        </div>\n        <button\n          autoFocus\n          className=\"col-span-2 bg-gray-300 text-gray-800 hover:bg-gray-700 hover:text-gray-50 outline-none\"\n        >\n          AC\n        </button>\n        <button className=\"bg-gray-400 hover:bg-gray-700 outline-none\">/</button>\n        <button className=\"bg-gray-400 hover:bg-gray-700 outline-none\">X</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">7</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">8</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">9</button>\n        <button className=\"bg-gray-400 hover:bg-gray-700 outline-none\">-</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">4</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">5</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">6</button>\n        <button className=\"bg-gray-400 hover:bg-gray-700 outline-none\">+</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">1</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">2</button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">3</button>\n        <button className=\"row-span-2 bg-gray-300 text-gray-800 hover:bg-gray-700 hover:text-gray-50 rounded-br outline-none\">\n          =\n        </button>\n        <button className=\"col-span-2 bg-gray-500 hover:bg-gray-700 rounded-bl outline-none\">\n          0\n        </button>\n        <button className=\"bg-gray-500 hover:bg-gray-700 outline-none\">.</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { isOperator } from \"./checkInfixed\";\n\nexport default function parseArr(arr) {\n  const parsedExpression = [];\n  let operand = \"\";\n  for (let i = 0; i < arr.length; i++) {\n    if (isOperator(arr[i])) {\n      if (arr[i] === \"-\") {\n        if (i === 0) {\n          operand += arr[i];\n        } else {\n          if (isOperator(arr[i - 1])) {\n            operand += arr[i];\n          } else {\n            parsedExpression.push(arr[i]);\n          }\n        }\n      } else {\n        parsedExpression.push(arr[i]);\n      }\n    } else {\n      operand += arr[i];\n      parsedExpression.push(parseFloat(operand));\n      operand = \"\";\n    }\n  } \n  return parsedExpression;  \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}